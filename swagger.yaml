swagger: "2.0"
info: 
  title: Pick And Drop App
  description: This API serves a local logistic companies to get orders and monitor the order status while serving their customers
  version: 1.0.0
  licence:
    name: MIT
    url: https://opensource.org/licenses/MIT
  servers:
    - url: https://pick-and-drop.onrender.com
      description: Production Host
    - url: http://localhost:5000
      description: Local Host Server
  contact:
    name: Dozie Udeagha
    email: dozie.udeagha@gmail.com

schemes: [https, http]
basePath: /api/v1
paths:
  /auths/register/company:
    post:
      summary: Create a company
      description: Create a logistic company to offer services
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: company
          in: body
          description: Company Object
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of company
                required: true
              email:
                type: string
                description: Email of the company or the promoter
                required: true
              phoneNumber:
                type: string
                description: Phone number of the company or the promoter
                required: true
              city: 
                type: string
                description: The city covered by the company or city located
                required: true
              state:
                type: string
                description: The state the company is located or covered
                required: true
              password:
                type: string
                description: The login password
                required: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  
  /auths/register/officer:
    post:
      summary: Register an Officer
      description: Register an Officer by a Comapany Admin
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: officer
          in: body
          description: officer account creation details
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: name of officer
                required: true
              address:
                type: string
                description: officer address of officer
                required: true
              location: 
                type: string
                description: office location
                required: true
              phoneNumber:
                type: string
                description: phone number of the officer
                required: true
              password:
                type: string
                description: password of the officer
                required: true
              companyId:
                type: string
                description: company ID of the company
                required: true
      
      responses:
        200:
          description: Success
        401:
          description: You are not authorised to perform this action
        500:
          description: Internal Server Error

  /auths/login/company:
    post:
      summary: Account login
      description: Allows the company admin or officer to login
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: login
          in: body
          description: email and password of company admin or phone number and pasword of officer
          required: true
          schema:
            type: object
            properties:
              email: 
                type: string
                description: email admin or officer
                required: true
              phoneNumber:
                type: string
                description: phone number of admin or officer
                required: true
              password: 
                type: string
                description: password of the company admin or officer
                required: true
      responses:
        200:
          description: Success
          schema:
            oneOf:
              - $ref: "#/definitions/Company"
              - $ref: '#/definitions/Officer'
        400:
          description: Bad request
        404:
          description: Account does not exist
        500:
          description: Internal Server Error

  /auths/password/company/{companyId}:
    post:
      summary: Update/change password for company
      description: To change or update password for company admin
      parameters:
        - name: companyId
          in: path
          description: Unique ID of the company
          required: true
        - name: password
          in: body
          description: password object
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
                description: The new password
                required: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: You are not authorised to perform this action
        500:
         description: Internal Server Error

  /auths/password/officer/{officerId}:
    post:
      summary: Update/change password for officer
      description: To change or update password for officer
      parameters:
        - name: officerId
          in: path
          description: Unique ID of the officer
          required: true
        - name: password
          in: body
          description: password object
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
                description: The new password
                required: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: You are not authorised to perform this action
        500:
         description: Internal Server Error

  /companies:
    get:
      summary: Get all companies
      description: Retrieve records for all companies
      responses:
        200: 
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Company"
        400: 
          description: Bad request
        500: 
          description: Internal Server error

  /companies/{companyId}:
    get:
      summary: Get a company
      description: Retrieve records for a company
      parameters:
        - name: companyId
          in: path
          description: Unique Id of the company
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Company"
        400:
          description: Bad request
        500: 
          description: Internal Server Error
    
    put:
      summary: Update Company
      description: Update records of a company
      parameters:
        - name: companyId
          in: path
          description: The unique ID of the company
          required: true
        - name: company object
          in: body
          description: Company object to be updated
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of company
                required: true
              email:
                type: string
                description: Email of the company or the promoter
                required: true
              phoneNumber:
                type: string
                description: Phone number of the company or the promoter
                required: true
              city: 
                type: string
                description: The city covered by the company or city located
                required: true
              state:
                type: string
                description: The state the company is located or covered
                required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Company"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    
    delete:
      summary: delete a company
      description: Delete company records
      parameters:
        - name: companyId
          in: path
          description: Unique ID of the company
          required: true
      responses:
        200: 
          description: Success
        400: 
          description: Bad request
        500: 
          description: Internal Server Error

  /officers/companies/{companyId}:
    get:
      summary: Get all company officers
      description: Retrieves the record of all officers in a company
      parameters:
        - name: companyId
          in: path
          description: The unique ID of the company where the officers belongs
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Officer'
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /officers/{officerId}/companies/{companyId}:
    get:
      summary: Get records of an Officer
      description: Retrieve the records of an officer
      parameters:
        - name: officerId
          in: path
          description: The unique ID of the officer
          required: true
        - name: companyId
          in: path
          description: The unique ID of the company where the officer belongs
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Officer'
        400:
          description: Bad Request
        500: 
          description: Internal Server Error

    put:
      summary: Update officer's records
      description: Update officer's records by the officer or company Admin
      parameters:
        - name: officerId
          in: path
          description: The unique ID of the officer
          required: true
        - name: companyId
          in: path
          description: The unique ID of the company where the officer belongs
          required: true
        - name: update details
          in: body
          description: The Object details of officer to be updated
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: name of officer
              address:
                type: string
                description: officer address of officer
              location: 
                type: string
                description: office location
              phoneNumber:
                type: string
                description: phone number of the officer
      responses:
        200: 
          description: Success
          schema:
            $ref: "#/definitions/Officer"
        400:
          description: Bad Request
        401:
          description: You are not authorised to perform this action
        500: 
          description: Internal Server Error

    delete:
      summary: Delete officer
      desciption: Delete officer of a company
      parameters:
        - name: officerId
          in: path
          description: The unique ID of officer to be deleted
          required: true
        - name: companyId
          in: path
          description: the Unique ID of the company where the officer belongs
          required: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: You are not authorised to perform this action
        500:
          description: Internal Server Error
  
  /senders:
    post:
      summary: Create a sender record
      description: To create a record for a sender who books the order
      produces:
        - application/json
      consumes:
        -  application/json
      parameters:
        - name: sender
          in: body
          description: sender details
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the Sender
                required: true
              phoneNumber:
                type: string
                description: The phone number of the sender
                required: true
              address:
                type: string
                description: The address of the sender
                required: true
              location:
                type: string
                description: The location of the address of the sender
                required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Sender'
        400: 
          description: Bad Request
        500:
          description: Internal Server Error

  /senders/{senderId}:
    put:
      summary: Update Sender Records
      description: To update record of a sender
      parameters:
        - name: senderId
          in: path
          description: The unique ID of the sender
          required: true
        - name: update details
          in: body
          description: The details to be updated
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the Sender
                required: true
              phoneNumber:
                type: string
                description: The phone number of the sender
                required: true
              address:
                type: string
                description: The address of the sender
                required: true
              location:
                type: string
                description: The location of the address of the sender
                required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Sender'
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    get:
      summary: Get sender details
      description: To Retrieve the records of a sender with a sender ID
      parameters:
        - name: senderId
          in: path
          description: The unique ID of the sender
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Sender"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /receivers/senders/{senderId}:
    post:
      summary: Create Reciever records
      description: To create receiver of an order by sender
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: senderId
          in: path
          description: The unique ID of the sender
          required: true
        - name: receiver details
          in: body
          description: The details of the receiver
          required: true
          schema:
            type: object
            properties:
              name: 
                type: string
                description: The name of the receiver
                required: true
              phoneNumber: 
                type: string
                description: The phone number of the receiver
                required: true
              city: 
                type: string
                description: the city where the receiver islocated
                required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Receiver"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /receivers/{receiverId}:
    put:
      summary: Update Receiver records
      description: Update the record details of a receiver using the receiver unique ID
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: receiverId
          in: path
          description: The unique ID of the receiver
          required: true
        - name: update details
          in: body
          description: The details of the receiver to be updated
          schema:
            type: object
            properties:
              name: 
                type: string
                description: The name of the receiver
                required: true
              phoneNumber: 
                type: string
                description: The phone number of the receiver
                required: true
              city: 
                type: string
                description: the city where the receiver islocated
                required: true
      responses:
        200: 
          description: Success
          schema:
            $ref: '#/definitions/Receiver'
        400: 
          description: Bad Request
        500:
          description: Internal Server Error
    
    get:
      summary: Get Receiver Records
      description: Retrieve the records of Receiver
      parameters:
        - name: receiverId
          in: path
          description: The unique ID of the receiver
          required: true
      responses:
        200: 
          description: Success
          schema:
           $ref: "#/definitions/Receiver"
        400: 
          description: Bad Request
        500:
          description: Internal Server Error

  /orders:
    post:
      summary: Create a new order
      description: Create a new order by the sender
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Order details
          in: body
          description: The details of the new order to be created
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
                description: The item to be sent/delivered
                required: true
              companyId:
                type: string
                description: The unique ID of the delivery company
                required: true
              receiverId:
                type: string
                description: The unique ID of the receiver
                required: true
              senderId:
                type: string
                description: The unique ID of the sender
                required: true
              officerId:
                type: string
                description: The unique ID of the receiver
                required: true
              deliveryPoint:
                type: string
                enum:
                  - Park
                  - Home
                description: Specify whether order will be home delivery or park.
                required: true
              deliveryAddress:
                type: string
                description: Delivery address if home delivery or Park/transport company Name and location
                required: true
              serviceFee: 
                type: number
                description: Service fee collected by company for delivery
                required: true
              RegisteredWaybill:
                type: boolean
                description: The sender state if the order would need to be registered offically with transport company
                required: true
                default: false
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Order"
        400:
          description: Bad Request
        500: 
          description: Internal Server Error
    
  /orders/{orderId}: 
    put:
      summary: Update Order records
      description: To update order records including status
      parameters:
        - name: orderId
          in: path
          description: The unique ID of the order
          required: true
        - name: update details
          in: body
          description: The details to be updated such as status
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
                description: The item to be sent/delivered
                required: true
              companyId:
                type: string
                description: The unique ID of the delivery company
                required: true
              receiverId:
                type: string
                description: The unique ID of the receiver
                required: true
              senderId:
                type: string
                description: The unique ID of the sender
                required: true
              officerId:
                type: string
                description: The unique ID of the receiver
                required: true
              deliveryPoint:
                type: string
                enum:
                  - Park
                  - Home
                description: Specify whether order will be home delivery or park.
                required: true
              deliveryAddress:
                type: string
                description: Delivery address if home delivery or Park/transport company Name and location
                required: true
              serviceFee: 
                type: number
                description: Service fee collected by company for delivery
                required: true
              RegisteredWaybill:
                type: boolean
                description: The sender state if the order would need to be registered offically with transport company
                required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Order"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    get:
      summary: Get details of an Order
      description: Retrieve details of an order using the order ID
      parameters:
        - name: orderId
          in: path
          description: The unique ID of the order
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Order"
        400: 
          description: Bad Request
        500:
          description: Internal Server Error
  
  /orders/companies/{companyId}:
    get:
      summary: Get orders with dates
      descriptions: Retrieve orders using start date and end date
      parameters:
        - name: companyId
          in: path
          description: The Unique ID of the company
          required: true
        - name: startDate
          in: query
          description: Retrieve the start date to orders query
          required: true
        - name: endDate
          in: query
          description: (Optional) Retrieve the end date for order query
      responses:
        200: 
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Order"
        400:
          descriptions: Bad Request
        500:
          descriptions: Internal Server Error
                

definitions:
  Company:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for the company
      name:
        type: string
        description: Name of the company
        required: true
      email:
        type: string
        description: Name of the company
        required: true
      phoneNumber:
        type: string
        description: Phone number of the company or the promoter
        required: true
      city:
        type: string
        description: City of coverage or located
        required: true
      state:
        type: string
        description: State company is located
        required: true
      password:
        type: string
        description: Login password
        required: true
      offices:
        type: array
        desctription: Pickup officers and their locations
        items:
          $ref: "#/definitions/Officer"
      logo:
        type: string
        description: The company logo
      rating:
        type: number
        description: The company rating over 5
      isAdmin: 
        type: boolean
        description: Admin user 

  Officer:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for officer
      name:
        type: string
        description: Name of Officer
        required: true
      address:
        type: string
        description: Address of Officer
        required: true
      location:
        type: string
        description: office location of Officer
        required: true
      phoneNumber:
        type: string
        description: Phone number of Officer
        required: true   
      companyId:
        type: string
        description: Unique ID of the company
        required: true
      pending:
        type: number
        description: Number of pending order
      viewed:
        type: number
        description: Number of viewed order
      picked:
        type: number
        description: Number of order picked/recieved by the officer
      transit:
        type: number
        description: Number of order on transit to park or home
      isAdmin:
        type: boolean
        description: Admin access to Officer
        default: false
      
  Sender:
    type: object
    properties:
      _id:
        type: string
        description: Unique ID of the Sender
      name:
        type: string
        description: The name of the sender
        required: true
      pnoneNumber:
        type: string
        description: The phone number of the sender
        required: true
      address:
        type: string
        description: The address ofthe sender
        required: true
      location:
        type: string
        description: The location of the address of the sender
        required: true
      customers:
        type: array
        items:
          $ref: "#/definitions/Receiver"
        description: All receivers the senders have created
  
  Receiver:
    type: object
    properties:
      _id:
        type: string
        description: Unique ID of the Receiver
      name:
        type: string
        description: The name of the receiver
        required: true
      phoneNumber:
        type: string
        description: phone number of the order receipient
        required: true
      city:
        type: string
        description: The city of the receiver/recipient
        required: true

  Order:
    type: object
    properties:
      _id:
        type: string
        description: The unique ID for any order booked
      content:
        type: string
        description: The item to be sent/delivered
        required: true
      companyId:
        $ref: '#/definitions/Company'
      receiverId:
        $ref: '#/definitions/Receiver'
      senderId:
        $ref: '#/definitions/Sender'
      officerId:
        $ref: '#/definitions/Officer'
      deliveryPoint:
        type: string
        enum:
          - Park
          - Home
        description: Specify whether order will be home delivery or park.
        required: true
      deliveryAddress:
        type: string
        description: Delivery address if home delivery or Park/transport company Name and location
        required: true
      serviceFee: 
        type: number
        description: Service fee collected by company for delivery
        required: true
      RegisteredWaybill:
        type: boolean
        description: The sender state if the order would need to be registered offically with transport company
        required: true
        default: false
      status:
        type: string
        enum:
          - Pending
          - Viewed
          - Received
          - On Transit
          - Delivered
        default: "Pending"
        description: Describe at what stage is the order for tracking purpose
        required: true
      deliveryAgent:
        type: string
        description: The name of the company rider or delivery officer
      viewedBy:
        type: string
        description: The name of the officer that viewed the order
      pickedBy:
        type: string
        description: The name of the officer that picked up the order from the sender
      driverNumber:
        type: string
        description: The phone number of transport company driver/tracking number if regustered waybill
      orderDate:
        type: string
        format: date
        description: The date the order was booked 
        


        
         
      

       
  